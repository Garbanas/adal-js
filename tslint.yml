# Deactivated since the *.yml file extension is not supported in IntelliJ IDEA
# Use this file as source to generate the tslint.json
---
extends:
  - tslint:recommended

rules:
  arrow-return-shorthand: true
  callable-types: false
  member-access: true
  # Enable eventually
  member-ordering:
    - false
    -
      order:
        - public-static-field
        - protected-static-field
        - private-static-field
        - public-instance-field
        - protected-instance-field
        - private-instance-field
        - constructor
        - public-instance-method
        - protected-instance-method
        - private-instance-method
        - public-static-method
        - protected-static-method
        - private-static-method
  no-any: false
  no-inferrable-types: false
  no-internal-module: true
  no-var-requires: false
  typedef-whitespace:
    - true
    -
      call-signature: nospace
      index-signature: nospace
      parameter: nospace
      property-declaration: nospace
      variable-declaration: nospace
    -
      call-signature: onespace
      index-signature: onespace
      parameter: onespace
      property-declaration: onespace
      variable-declaration: onespace
  ban: false
  curly: true
  deprecation:
    severity: warn
  forin: true
  label-position: true
  no-arg: true
  no-bitwise: true
  no-conditional-assignment: true
  no-construct: true
  no-debugger: true
  no-duplicate-super: true
  no-duplicate-variable: true
  no-empty: true
  no-empty-interface: true
  no-eval: true
  no-null-keyword: false
  no-shadowed-variable: true
  no-string-literal: false
  no-string-throw: true
  no-switch-case-fall-through: true
  no-unused-expression: true
  no-use-before-declare: true
  no-var-keyword: true
  radix: true
  switch-default: true
  triple-equals:
    - true
    - allow-null-check
  eofline: true
  indent:
    - true
    - spaces
    - 2
  max-line-length: false
  no-trailing-whitespace: true
  object-literal-sort-keys: false
  trailing-comma:
    - true
    -
      multiline:
        objects: always
        arrays: always
        functions: never
        typeLiterals: ignore
      singleline: never
      esSpecCompliant: true
  align: false
  class-name: true
  comment-format:
    - true
    - check-space
  interface-name: false
  no-consecutive-blank-lines: true
  one-line:
    - true
    - check-open-brace
    - check-catch
    - check-else
    - check-finally
    - check-whitespace
  prefer-const: true
  quotemark:
    - true
    - single
    - avoid-escape
  semicolon:
    - true
    - always
  variable-name:
    - true
    - check-format
    - allow-leading-underscore
    - ban-keywords
  whitespace:
    - true
    - check-branch
    - check-decl
    - check-operator
    - check-separator
    - check-type
    - check-module
  directive-selector:
    - true
    - attribute
    - []
    - camelCase
  component-selector:
    - true
    - element
    - []
    - kebab-case
  use-input-property-decorator: true
  use-output-property-decorator: true
  use-host-property-decorator: true
  no-attribute-parameter-decorator: true
  no-input-rename: true
  no-output-rename: true
  no-output-on-prefix: true
  no-forward-ref: true
  use-life-cycle-interface: true
  contextual-life-cycle: true
  trackBy-function: true
  use-pipe-transform-interface: true
  component-class-suffix: true
  directive-class-suffix: true
  pipe-impure: true
  use-isnan: true
  no-unnecessary-initializer: true
  number-literal-format: true
  newline-per-chained-call: true
  newline-before-return: true
  one-variable-per-declaration:
    - true
    - ignore-for-loop
  import-destructuring-spacing: true
  space-before-function-paren:
    - true
    -
      anonymous: never
      named: never
      asyncArrow: always
  ordered-imports: false
  max-classes-per-file: false
  array-type:
    - true
    - array
  interface-over-type-literal: false

  # Enable eventually (remove these settings)
  prefer-for-of: false
  object-literal-shorthand: false
